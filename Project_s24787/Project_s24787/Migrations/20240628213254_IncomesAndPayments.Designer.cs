// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_s24787.Context;

#nullable disable

namespace Project_s24787.Migrations
{
    [DbContext(typeof(ABCDbContext))]
    [Migration("20240628213254_IncomesAndPayments")]
    partial class IncomesAndPayments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractDiscount", b =>
                {
                    b.Property<int>("ContractsIdContract")
                        .HasColumnType("int");

                    b.Property<int>("DiscountsIdDiscount")
                        .HasColumnType("int");

                    b.HasKey("ContractsIdContract", "DiscountsIdDiscount");

                    b.HasIndex("DiscountsIdDiscount");

                    b.ToTable("ContractDiscount");
                });

            modelBuilder.Entity("Project_s24787.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            IdCategory = 1,
                            CategoryName = "finanse"
                        },
                        new
                        {
                            IdCategory = 2,
                            CategoryName = "edukacja"
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Address = "Random Street, 1",
                            Email = "firm1.email@email.email",
                            PhoneNumber = "48123456789"
                        },
                        new
                        {
                            IdClient = 2,
                            Address = "Random Street, 2",
                            Email = "ind1.email@email.email",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            IdClient = 3,
                            Address = "Random Street, 3",
                            Email = "firm2.email@email.email",
                            PhoneNumber = "48783490128"
                        },
                        new
                        {
                            IdClient = 4,
                            Address = "Random Street, 4",
                            Email = "ind2.email@email.email",
                            PhoneNumber = "154807654"
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.Contract", b =>
                {
                    b.Property<int>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContract"));

                    b.Property<int?>("AdditionalUpdates")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSoftware")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentIdPayment")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Update")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdContract");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSoftware");

                    b.HasIndex("PaymentIdPayment");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Project_s24787.Models.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("IdDiscount");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            IdDiscount = 1,
                            ActiveFrom = new DateTime(2024, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountName = "Welcome back",
                            Offer = "Zniżka dla powracających klientów",
                            Value = "5%"
                        },
                        new
                        {
                            IdDiscount = 2,
                            ActiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActiveTo = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountName = "Black Friday Discount",
                            Offer = "Zniżka na subskrypcję",
                            Value = "10%"
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.Firm", b =>
                {
                    b.Property<string>("KRSNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("FirmName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.HasKey("KRSNumber");

                    b.HasIndex("IdClient")
                        .IsUnique();

                    b.ToTable("Firms");

                    b.HasData(
                        new
                        {
                            KRSNumber = "123456789",
                            FirmName = "SomeFirmName",
                            IdClient = 1
                        },
                        new
                        {
                            KRSNumber = "67854290654327",
                            FirmName = "CoolFirmName",
                            IdClient = 3
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.Individual", b =>
                {
                    b.Property<string>("PESEL")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PESEL");

                    b.HasIndex("IdClient")
                        .IsUnique();

                    b.ToTable("Individuals");

                    b.HasData(
                        new
                        {
                            PESEL = "13579087635",
                            IdClient = 2,
                            Name = "John",
                            Surname = "Doe"
                        },
                        new
                        {
                            PESEL = "75648947261",
                            IdClient = 4,
                            Name = "Jenny",
                            Surname = "Davis"
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdClient");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project_s24787.Models.Software", b =>
                {
                    b.Property<int>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSoftware"));

                    b.Property<string>("CurrentVersion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<double>("LicencePrice")
                        .HasColumnType("float");

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSoftware");

                    b.HasIndex("IdCategory");

                    b.ToTable("SoftwareSystems");

                    b.HasData(
                        new
                        {
                            IdSoftware = 1,
                            CurrentVersion = "Version 1.9.7 - prerelease",
                            Description = "Some finance software. Very cool, everyone should buy",
                            IdCategory = 1,
                            LicencePrice = 20000.0,
                            SoftwareName = "FinanceSoftware"
                        },
                        new
                        {
                            IdSoftware = 2,
                            CurrentVersion = "7.9.8",
                            Description = "Very comfortable for teachers. Students will be smart",
                            IdCategory = 2,
                            LicencePrice = 0.0,
                            SoftwareName = "EducationSoftware"
                        });
                });

            modelBuilder.Entity("Project_s24787.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContractDiscount", b =>
                {
                    b.HasOne("Project_s24787.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsIdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_s24787.Models.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsIdDiscount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_s24787.Models.Contract", b =>
                {
                    b.HasOne("Project_s24787.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_s24787.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_s24787.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentIdPayment");

                    b.Navigation("Client");

                    b.Navigation("Payment");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Project_s24787.Models.Firm", b =>
                {
                    b.HasOne("Project_s24787.Models.Client", "Client")
                        .WithOne("Firm")
                        .HasForeignKey("Project_s24787.Models.Firm", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Project_s24787.Models.Individual", b =>
                {
                    b.HasOne("Project_s24787.Models.Client", "Client")
                        .WithOne("Individual")
                        .HasForeignKey("Project_s24787.Models.Individual", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Project_s24787.Models.Payment", b =>
                {
                    b.HasOne("Project_s24787.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Project_s24787.Models.Software", b =>
                {
                    b.HasOne("Project_s24787.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project_s24787.Models.Client", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Firm");

                    b.Navigation("Individual");
                });
#pragma warning restore 612, 618
        }
    }
}
